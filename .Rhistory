BfestReg$FTDf<-factor(BfestReg$FTD)
qplot(BfestReg$Date,BfestReg$FTDf)
qplot(BfestReg$FTD)
qplot(BfestReg$FTD,BfestReg$FTDf)
qplot(BfestReg$FTD,BfestReg$PDB)
qplot(BfestReg$Date,BfestReg$Walk)
BfestReg$Datef<-factor(BfestReg$Date)
qplot(BfestReg$Datef,BfestReg$FTD)
plot(BfestReg$Date,BfestReg$FTD,las=2)
BfestReg <- read.csv("C:/Users/rhyde/Desktop/BfestReg.csv")
View(BfestReg)
qplot(BfestReg$Date,BfestReg$FTD)
BfestMelt<-melt(BfestReg)
qplot(BfestReg$Date,BfestReg$FTD)+geom_line(BfestReg$PDB)
read.csv<--(Tel15.csv)
read.csv<-("Tel15.csv")
summary(Tel15)
tel<-read.csv("Tel15.csv")
data<-read.csv(file.choose(),heater=T)
data<-read.csv(file.choose(),header=T)
summary(data)
tel<-read.csv(file.choose(),heater=T)
tel<-read.csv(file.choose(),header=T)
summary(tel)
cor.test(tel$Tel_Category,tel$DM15tot)
cor.test(tel$DM15tot,tel$Tel_Category)
cor.test(tel$Tel15,tel$DM15tot)
tel<-read.csv(file.choose(),header=T)
cor.test(tel$Tel15,tel$DM15tot)
t.test(tel$DM15tot~tel$Tel_Category)
shapiro.test(tel$DM15tot)
wilcox.test(tel$DM15tot~tel$Tel_Category)
install.packages("slidify")
install.packages("devtools")
install_github('slidify','ramnathv')
install.packages("github")
source("http://github.com")
install.packages("install_github")
install_github(c(slidify/ramnathv))
library("ggplot2", lib.loc="~/R/win-library/3.1")
getwd
get wd
ggetwd()
getwd()
changedir
cd
myfunction
myfunction
{
mean(rnorm(100))
}
}
{mean(rnorm(100))
{mean(rnorm(100))}
{mean(rnorm(100))}
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
q()
getwd
getwd()
x<-list(foo=1:4,bar=0.6)
x
class(x[1])
class(x[[1]])
class(x$foo)
class(x[foo])
clas(x[1])
class(x[2])
x[2]
class(x[[2]])
class(x$bar)
class(x[2])
class(x[[2]])
class(x$bar)
class(x[["bar"]])
class(x["bar"])
x<- list(foo=1:4,bar=0.6,baz="hello")
foo
"foo"
$foo
x$foo
name<-x$foo
name
x[[name]]
name<-"foo"
x[[name]]
x$name
x$foo
x<-matrix(1:6,2,3)
x
x<-matrix("glarf",2,3)
x
x<-matrix(("glarf","steel",TRUE,1,2,2100)2,3)
x<-matrix(1:6,2,3)
class(x[1,])
x[1]
x[1,]
class(x[[1,]])
class(x[1,])
class(x[1])
x[1,2]
x[1,2,drop=FALSE]
x<-c(1,2,NA,4,NA,5)
bad<-is.na(x)
bad
x[!bad]
x<-c(1,2,NA,4,NA,5)
y<-c("a",NA,"b","c",NA,"d")
y
x
good<-complete.cases(x,y)
good
x[good]
y[good]
swirl()
library("swirl", lib.loc="C:/Program Files/R/R-3.3.1/library")
swirl()
5+7
x<-5+7
x
y<-x-3
y7
y
c(1.1,9,3.14)
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqr(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
args()
args(list.files)
old.dir<-list.files
old.dir<-getwd()
dir.create(testdir)
dir.create(testdir)
?dir.create
dir.create(getwd(testdir))
getwd(c/users/rhyde/dropbox/coursera)
dir.create("testdir")
setwd()testdir
setwd(testdir)
getwd(0)
getwd()
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info(mytest.R)
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R",folder1,folder2)
file.path("mytest3.R","folder1"","folder2"")
file.path("mytest3.R","folder1"","folder2")
file.path("mytest3.R","folder1","folder2")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
setwd(old.dir)
unlink(("testdir"),recursive=TRUE)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,20,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times-10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_car<-c("My","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
c(my_char,"Ryan")
paste(c(my_char,"Ryan"),collapse=" ")
my_name<-c(my_char,"Ryan")
my_name
paste(my_char,collapse=" ")
paste(my_name,collapse=" ")
paste("Hello","World!",sep=" ")
paste("Hello","world!",sep=" ")
paste(c(1,2,3),c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
ls()
rm ls()
rm
?rm
rm(list(ls))
rm()
ls()
rm(list)
rm(my_car)
rm(list=ls())
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
Z<-rep(NA,1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[x(c(1,5,7))]
x[c(x(1,5,7))]
x
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
lenght(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(4,5,1:20)
my_matrix2<-matrix(nrow=4,ncol = 5,1:20)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.fram(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
swirl()
files<-list.files(directory,full.names=TRUE)[1:10]
director<-"specdata"
files<-list.files(directory,full.names=TRUE)[1:10]
directory<-"specdata"
files<-list.files(directory,full.names=TRUE)[1:10]
mydata<-do.call(rbind,lapply(files,read.csv))
setwd("c:/Users/rhyde/Dropbox/Coursera/")
mydata<-do.call(rbind,lapply(files,read.csv))
files<-list.files(directory,full.names=TRUE)[1:10]
mydata<-do.call(rbind,lapply(files,read.csv))
sub<-mydata[complete.cases,]
sub<-mydata[complete.cases]
sub<-mydata[,complete.cases]
comp<-complete.cases(mydata)
summary(comp)
sub<-mydata[comp]
rm(comp)
sub<-mydata[mydata$sulfate !is.na & mydata$nitrate !is.na,]
comp<-mydata[complete.cases(mydata)]
mydata
summary(mydata)
comp<-mydata[complete.cases(mydata),]
summary(comp)
complete<-function(directory,id=1:332){
files<-list.files(directory,full.names=TRUE)[id]
mydata<-do.call(rbind,lapply(files,read.csv))
comp<-mydata[complete.cases(mydata),]
ids <-unique(comp$ID)
obs<-sapply(ids, function(id) length(subset(sub2, ID == id)$ID))
data.frame(id=ids,nobs=as.vector(obs))
}
complete(id=1:10)
complete("specdata",1:10)
complete<-function(directory,id=1:332){
files<-list.files(directory,full.names=TRUE)[id]
mydata<-do.call(rbind,lapply(files,read.csv))
comp<-mydata[complete.cases(mydata),]
ids <-unique(comp$ID)
obs<-sapply(ids, function(id) length(subset(comp, ID == id)$ID))
data.frame(id=ids,nobs=as.vector(obs))
}
complete("specdata",1:10)
corr<-function(directory,threshold=0){
files<-list.files(directory,full.names=TRUE)
mydata<-do.call(rbind,lapply(files,read.csv))
sub2<-mydata[complete.cases(mydata),]
ids<-unique(sub2$ID)
obs<-sapply(ids, function(id) length(subset(sub2, ID == id)$ID))
Isolated<-data.frame(ID=ids,nobs=as.vector(obs))
merged<-merge(sub2,Isolated)
thr<-merged[merged$nobs >= threshold,]
ids2<-unique(thr$ID)
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",150)
corr<-function(directory,threshold=0){
files<-list.files(directory,full.names=TRUE)
mydata<-do.call(rbind,lapply(files,read.csv))
comp<-mydata[complete.cases(mydata),]
ids<-unique(comp$ID)
obs<-sapply(ids, function(id) length(subset(comp, ID == id)$ID))
Isolated<-data.frame(ID=ids,nobs=as.vector(obs))
merged<-merge(comp,Isolated)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",1000)
corr<-function(directory,threshold=0){
nobs<-function(complete("specdata"))
nobs
}
corr<-function(directory,threshold=0){
nobs<-function(complete("specdata",1:10))
nobs
}
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:10)
nobs
}
corr("specdata")
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:10)
mydata
}
corr("specdata")
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:3)
summary(mydata)
}
corr("specdata")
summary(complete("specdata",1:3))
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:3)
merged<-merge(comp,nobs)
summary(merged)
}
corr("specdata")
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:3)
merged<-merge(comp,obs)
}
corr("specdata")
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:3)
merged<-merge(comp,nobs)[merged$nobs >=threshold,]
}
corr("specdata",100)
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:3)
merged<-merge(comp,nobs)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",100)
corr<-function(directory,threshold=0){
nobs<-complete("specdata")
merged<-merge(comp,nobs)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",1000)
corr<-function(directory,threshold=0){
nobs<-complete("specdata",1:332)
merged<-merge(comp,nobs)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",1000)
corr<-function(directory,threshold=0){
nobs<-complete("specdata")
merged<-merge(comp,nobs)
summary(merged)
#thr<-merged[merged$nobs >= threshold,]
#cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
#cors
}
corr("specdata",1000)
complete<-function(directory,id=1:332){
files<-list.files(directory,full.names=TRUE)[id]
mydata<-do.call(rbind,lapply(files,read.csv))
comp<-mydata[complete.cases(mydata),]
ids <-unique(comp$ID)
obs<-sapply(ids, function(id) length(subset(comp, ID == id)$ID))
data.frame(ID=ids,nobs=as.vector(obs))
}
corr<-function(directory,threshold=0){
nobs<-complete("specdata")
merged<-merge(comp,nobs)
summary(merged)
#thr<-merged[merged$nobs >= threshold,]
#cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
#cors
}
corr("specdata",1000)
corr<-function(directory,threshold=0){
nobs<-complete("specdata")
merged<-merge(comp,nobs)
summary(merged)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",1000)
corr("specdata",150)
corr<-function(directory,threshold=0){
nobs<-complete("specdata")
merged<-merge(comp,nobs)
summary(merged)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(x) cor(x$sulfate,x$nitrate))
cors
}
corr("specdata",150)
corr<-function(directory,threshold=0){
files<-list.files(directory,full.names=TRUE)
mydata<-do.call(rbind,lapply(files,read.csv))
comp<-mydata[complete.cases(mydata),]
ids<-unique(comp$ID)
obs<-sapply(ids, function(id) length(subset(comp, ID == id)$ID))
Isolated<-data.frame(ID=ids,nobs=as.vector(obs))
merged<-merge(comp,Isolated)
thr<-merged[merged$nobs >= threshold,]
cors<-sapply(split(thr,thr$ID), function(ttt) cor(ttt$sulfate,ttt$nitrate))
cors
}
corr("specdata",150)
setwd("AP2")
list.dirs()
setwd("~/AP2"
)
setwd("c:/Users/rhyde/Dropbox/Coursera/PA2/")
rm(list=ls())
tester<-function(x){
x<<x
}
tester<-function(x){
x<<-x
}
tester(123)
x
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makevector(4)
makeVector(4)
makeVector(1:4)
makeVector(c(1:4,3:6,10:14))
